version: '3.8'

services:
  alloy:
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=experimental # Enable all functionality
    environment:
      MIMIR_HOST: mimir-proxy:9009
      LOKI_HOST: loki-proxy:3100
      TEMPO_HOST: tempo-proxy:4318
    expose:
      - 12345
    image: grafana/alloy:latest
    networks:
      - internal
    restart: unless-stopped
    volumes:
      - ./config/alloy/config.alloy:/etc/alloy/config.alloy

  env-monitor:
    build: .
    ports:
      - "8080:8080"
    environment:
      - LOGS_PUSH_URL=${LOKI_URL}
      - METRICS_PUSH_URL=${MIMIR_URL}
      - TRACING_PUSH_URL=${MIMIR_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.envmonitor.entrypoints=http
      - traefik.http.routers.envmonitor.service=envmonitor
      - traefik.http.routers.envmonitor.rule=Host(`prometheus.${INGRESS_DOMAIN:?error}`)
      - traefik.http.services.envmonitor.loadbalancer.server.port=8080
      - traefik.docker.network=internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  ingress-proxy:
    depends_on:
      - traefik-dockerproxy
    expose:
      - "8081" # traefik metrics
    image: traefik:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-ui.entrypoints=https
      - traefik.http.routers.traefik-ui.rule=Host(`ingress-grafana.${INGRESS_DOMAIN:?error}`)
      #- traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIKADMIN}
      #- traefik.http.routers.traefik-ui.middlewares=traefik-auth
      - traefik.http.routers.traefik-ui.service=api@internal
    networks:
      - internal
      - proxy
    ports:
      - "80:10080"  # use high ports inside the container so
      - "443:10443" # we don't need to be root to bind the ports
    read_only: true
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/ingress/traefik.yml:/traefik.yml:ro
      - ./config/traefik/ingress/configs:/configs:ro
      - ./config/traefik/ingress/certs:/etc/certs:ro
      - ./config/traefik/ingress/logs:/logs:rw

  # Don't allow traefik default access to the docker socket because that's not very safe.
  traefik-dockerproxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: traefik-dockerproxy
    environment:
      - CONTAINERS=1
      - POST=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    tmpfs:
      - /run
    networks:
      - internal
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    read_only: true
